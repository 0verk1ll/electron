From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andy Locascio <andy@slack-corp.com>
Date: Wed, 6 May 2020 16:37:54 -0700
Subject: allow in-process windows to have different web prefs

Allow earlier access to newly created WebContents so that we can change
WebPreferences of in-process child windows, rather than relying on
process-level command line switches, as before.

diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index 9d7b90476a680d44fdb903a15c1ebea0e23053c7..6ccd63bc948359058551aedd23ea1c8c1318e46a 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -3043,6 +3043,10 @@ RenderFrameHostDelegate* WebContentsImpl::CreateNewWindow(
   }
   auto* new_contents_impl = new_contents.get();
 
+  if (delegate_) {
+    delegate_->WebContentsCreatedWithFullParams(this, render_process_id, opener->GetRoutingID(), params, new_contents_impl);
+  }
+
   new_contents_impl->GetController().SetSessionStorageNamespace(
       partition_id, session_storage_namespace);
 
@@ -3084,12 +3088,6 @@ RenderFrameHostDelegate* WebContentsImpl::CreateNewWindow(
     AddDestructionObserver(new_contents_impl);
   }
 
-  if (delegate_) {
-    delegate_->WebContentsCreatedWithFullParams(this, render_process_id,
-                                                opener->GetRoutingID(),
-                                                params, new_contents_impl);
-  }
-
   for (auto& observer : observers_) {
     observer.DidOpenRequestedURL(new_contents_impl, opener, params.target_url,
                                  params.referrer.To<Referrer>(),
diff --git a/content/public/common/common_param_traits_macros.h b/content/public/common/common_param_traits_macros.h
index 05b024447da23e611e6b8deca73ff306854817ef..9ce3278eca7884a65e3ffad2185de14ba79b3981 100644
--- a/content/public/common/common_param_traits_macros.h
+++ b/content/public/common/common_param_traits_macros.h
@@ -132,6 +132,27 @@ IPC_STRUCT_TRAITS_BEGIN(content::WebPreferences)
   IPC_STRUCT_TRAITS_MEMBER(webgl2_enabled)
   IPC_STRUCT_TRAITS_MEMBER(pepper_3d_enabled)
   IPC_STRUCT_TRAITS_MEMBER(record_whole_document)
+
+  IPC_STRUCT_TRAITS_MEMBER(preloads)
+  IPC_STRUCT_TRAITS_MEMBER(disable_electron_site_instance_overrides)
+  IPC_STRUCT_TRAITS_MEMBER(background_color)
+  IPC_STRUCT_TRAITS_MEMBER(opener_id)
+  IPC_STRUCT_TRAITS_MEMBER(context_isolation)
+  IPC_STRUCT_TRAITS_MEMBER(enable_remote_module)
+  IPC_STRUCT_TRAITS_MEMBER(guest_instance_id)
+  IPC_STRUCT_TRAITS_MEMBER(hidden_page)
+  IPC_STRUCT_TRAITS_MEMBER(offscreen)
+  IPC_STRUCT_TRAITS_MEMBER(preload)
+  IPC_STRUCT_TRAITS_MEMBER(native_window_open)
+  IPC_STRUCT_TRAITS_MEMBER(node_integration)
+  IPC_STRUCT_TRAITS_MEMBER(node_integration_in_worker)
+  IPC_STRUCT_TRAITS_MEMBER(node_leakage_in_renderers)
+  IPC_STRUCT_TRAITS_MEMBER(node_integration_in_sub_frames)
+  IPC_STRUCT_TRAITS_MEMBER(enable_spellcheck)
+  IPC_STRUCT_TRAITS_MEMBER(enable_plugins)
+  IPC_STRUCT_TRAITS_MEMBER(enable_websql)
+  IPC_STRUCT_TRAITS_MEMBER(webview_tag)
+
   IPC_STRUCT_TRAITS_MEMBER(flash_3d_enabled)
   IPC_STRUCT_TRAITS_MEMBER(flash_stage3d_enabled)
   IPC_STRUCT_TRAITS_MEMBER(flash_stage3d_baseline_enabled)
diff --git a/content/public/common/web_preferences.cc b/content/public/common/web_preferences.cc
index f85ad51fb34be41c051d1f2afface443299dc005..df421cce6c9ce0458924ffa92cefa20fb7e06481 100644
--- a/content/public/common/web_preferences.cc
+++ b/content/public/common/web_preferences.cc
@@ -165,6 +165,27 @@ WebPreferences::WebPreferences()
       navigate_on_drag_drop(true),
       v8_cache_options(blink::mojom::V8CacheOptions::kDefault),
       record_whole_document(false),
+
+      preloads(base::EmptyString()),
+      disable_electron_site_instance_overrides(),
+      background_color(base::EmptyString()),
+      opener_id(0),
+      context_isolation(false),
+      enable_remote_module(false),
+      guest_instance_id(0),
+      hidden_page(false),
+      offscreen(false),
+      preload(base::EmptyString()),
+      native_window_open(false),
+      node_integration(false),
+      node_integration_in_worker(false),
+      node_leakage_in_renderers(false),
+      node_integration_in_sub_frames(false),
+      enable_spellcheck(false),
+      enable_plugins(false),
+      enable_websql(false),
+      webview_tag(false),
+
       cookie_enabled(true),
       accelerated_video_decode_enabled(false),
       animation_policy(IMAGE_ANIMATION_POLICY_ALLOWED),
diff --git a/content/public/common/web_preferences.h b/content/public/common/web_preferences.h
index bf98747b7b38d694a93de5deaaa845ee6caa2108..ac0dba47b62cb9a3f95664cbfefb13ccb3c53c16 100644
--- a/content/public/common/web_preferences.h
+++ b/content/public/common/web_preferences.h
@@ -183,6 +183,26 @@ struct CONTENT_EXPORT WebPreferences {
   blink::mojom::V8CacheOptions v8_cache_options;
   bool record_whole_document;
 
+  std::string preloads;
+  bool disable_electron_site_instance_overrides;
+  std::string background_color;
+  int opener_id;
+  bool context_isolation;
+  bool enable_remote_module;
+  int guest_instance_id;
+  bool hidden_page;
+  bool offscreen;
+  std::string preload;
+  bool native_window_open;
+  bool node_integration;
+  bool node_integration_in_worker;
+  bool node_leakage_in_renderers;
+  bool node_integration_in_sub_frames;
+  bool enable_spellcheck;
+  bool enable_plugins;
+  bool enable_websql;
+  bool webview_tag;
+
   // This flags corresponds to a Page's Settings' setCookieEnabled state. It
   // only controls whether or not the "document.cookie" field is properly
   // connected to the backing store, for instance if you wanted to be able to
